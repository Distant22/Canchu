version: '3.8'

networks:
  canchu-network:
    driver: bridge

services:
  canchu:
    build: .
    env_file:
      - .env
    ports:
      - "3000:3000"
    depends_on:
      - redis
      - mysql
    environment:
      DB_USER: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: canchu_mysql_1
    volumes:
      - ./static:/canchu/static
    networks:
      - canchu-network

  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./nginx_docker/bundle_chained.crt:/etc/ssl/bundle_chained.crt
      - ./nginx_docker/private.key:/etc/ssl/private.key
    networks:
      - canchu-network

  redis:
    image: redis:6.0-alpine
    command: redis-server --requirepass ''    
    environment:
      REDIS_HOST: canchu_redis_1
      REDIS_PORT: 6379
      DATABASE_HOST: canchu_mysql_1
      DATABASE_USER: ${DB_USERNAME}
      DATABASE_PASSWORD: ${DB_PASSWORD}
      DATABASE_NAME: user 
    ports:
      - "6380:6379"
    networks:
      - canchu-network

  # mysql:
  #   image: mysql:8.0.34
  #   container_name: canchu_mysql_1
  #   env_file:
  #     - .env
  #   ports:
  #     - "3307:3306"
  #   networks:
  #     - canchu-network
  #   environment:
  #     - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
  #     - MYSQL_USER=${DB_USERNAME}
  #     - MYSQL_PASSWORD=${DB_PASSWORD}
  #   volumes:
  #     - type: bind
  #       source: ./mysql-init-scripts/init_rds.sql
  #       target: /docker-entrypoint-initdb.d/init_rds.sql
  #     - mysql:/var/lib/mysql

# volumes:
#   mysql:
